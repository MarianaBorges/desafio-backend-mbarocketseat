// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum StatusType {
  PENDING
  SOLD
  CANCELLED
}

model Category {
  id         String  @id @default(uuid())
  title      String
  desc       String

  product Product[]
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  phone    String @unique
  password String
  
  avatar   Image[]
  views    View[]
  product Product[]

  @@map("users")
}

model Product {
  id           String @id @default(uuid())
  userId       String @map("user_id")
  categoryId   String @map("category_id")
  title        String
  desc         String
  valueInCents Float @map("value_in_cents")
  status       StatusType?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")

  category Category @relation(fields: [categoryId], references: [id])
  user User @relation(fields: [userId], references: [id])

  images Image[]
  views View[]
  
  @@map("products")
}

model Image {
  id         String  @id @default(uuid())
  productId  String? @map("product_id")
  userId     String? @map("user_id")
  title      String
  url        String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")

  product Product? @relation(fields: [productId], references: [id])
  user User? @relation(fields: [userId], references: [id])

  @@map("images")
}

model View {
  id         String  @id @default(uuid())
  productId  String @map("product_id")
  userId     String @map("user_id") 
  createdAt  DateTime  @default(now()) @map("created_at")

  product Product @relation(fields: [productId], references: [id])
  user User @relation(fields: [userId], references: [id])
}